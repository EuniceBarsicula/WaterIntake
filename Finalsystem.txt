import tkinter as tk
from tkinter import simpledialog, messagebox

class SmartHydrationWatch:
    def __init__(self, weight):
        self.weight = weight  # User's weight in kg
        self.daily_goal = self.calculate_daily_goal()
        self.water_consumed = 0

    def calculate_daily_goal(self):
        # Calculate daily water intake goal in ml
        # Common recommendation: 35 ml per kg of body weight
        return self.weight * 35

    def add_water(self, amount):
        self.water_consumed += amount

    def check_hydration_status(self):
        if self.water_consumed >= self.daily_goal:
            return f"You are well hydrated! You've consumed {self.water_consumed} ml of water."
        else:
            reminder = f"Reminder: Drink {self.daily_goal - self.water_consumed} ml more water to reach your goal."
            return f"You are dehydrated! You've consumed {self.water_consumed} ml out of {self.daily_goal} ml needed.\n{reminder}"

    def reset_daily_intake(self):
        self.water_consumed = 0

class HydrationApp:
    def __init__(self, root, watch):
        self.root = root
        self.watch = watch

        self.root.title("Smart Hydration Watch")

        self.status_label = tk.Label(root, text="", font=('calibri', 15))
        self.status_label.pack()

        self.amount_label = tk.Label(root, text="Enter amount of water consumed (ml):")
        self.amount_label.pack()

        self.amount_entry = tk.Entry(root)
        self.amount_entry.pack()

        self.add_button = tk.Button(root, text="Add Water", command=self.add_water)
        self.add_button.pack()

        self.reset_button = tk.Button(root, text="Reset Daily Intake", command=self.reset_daily_intake)
        self.reset_button.pack()

        self.update_status()
        self.remind_user()

    def update_status(self):
        status = self.watch.check_hydration_status()
        self.status_label.config(text=status)
        self.root.after(3000, self.update_status)  # Update every 3 seconds

    def remind_user(self):
        if self.watch.water_consumed < self.watch.daily_goal:
            reminder = f"Reminder: Drink {self.watch.daily_goal - self.watch.water_consumed} ml more water to reach your goal."
            messagebox.showinfo("Hydration Reminder", reminder)
        self.root.after(5000, self.remind_user)  # Remind every 5 seconds

    def add_water(self):
        amount = float(self.amount_entry.get())
        self.watch.add_water(amount)
        self.amount_entry.delete(0, tk.END)
        self.update_status()

    def reset_daily_intake(self):
        self.watch.reset_daily_intake()
        self.update_status()

def main():
    root = tk.Tk()
    root.withdraw()  # Hide the root window
    weight = simpledialog.askfloat("Input", "Enter your weight in kg:", minvalue=0.1)
    root.deiconify()  # Show the root window

    watch = SmartHydrationWatch(weight)

    app = HydrationApp(root, watch)
    root.mainloop()

if __name__ == "__main__":
    main()
